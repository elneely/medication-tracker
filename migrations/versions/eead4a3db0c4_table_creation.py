"""table creation

Revision ID: eead4a3db0c4
Revises: 
Create Date: 2023-04-12 17:00:42.958177

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'eead4a3db0c4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('doctor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('phone_number', sa.String(length=10), nullable=True),
    sa.Column('address_line_1', sa.String(length=64), nullable=True),
    sa.Column('address_line_2', sa.String(length=64), nullable=True),
    sa.Column('city', sa.String(length=32), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('zipcode', sa.String(length=5), nullable=True),
    sa.Column('notes', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pharmacy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('phone_number', sa.String(length=10), nullable=True),
    sa.Column('address_line_1', sa.String(length=64), nullable=True),
    sa.Column('address_line_2', sa.String(length=64), nullable=True),
    sa.Column('city', sa.String(length=32), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('zipcode', sa.String(length=5), nullable=True),
    sa.Column('notes', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('medication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('medication_name', sa.String(length=128), nullable=True),
    sa.Column('brand_name', sa.String(length=64), nullable=True),
    sa.Column('dose', sa.String(length=64), nullable=True),
    sa.Column('frequency', sa.String(length=64), nullable=True),
    sa.Column('prescription_date', sa.Date(), nullable=True),
    sa.Column('last_filled', sa.Date(), nullable=True),
    sa.Column('short_term', sa.Boolean(), nullable=True),
    sa.Column('reminder', sa.Boolean(), nullable=True),
    sa.Column('reminder_length', sa.Integer(), nullable=True),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('pharmacy_id', sa.Integer(), nullable=True),
    sa.Column('refills_remaining', sa.Integer(), nullable=True),
    sa.Column('refills_expiration', sa.Date(), nullable=True),
    sa.Column('length', sa.String(length=64), nullable=True),
    sa.Column('reason', sa.String(length=128), nullable=True),
    sa.Column('notes', sa.String(length=1024), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('medication', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_medication_last_filled'), ['last_filled'], unique=False)
        batch_op.create_index(batch_op.f('ix_medication_length'), ['length'], unique=False)
        batch_op.create_index(batch_op.f('ix_medication_prescription_date'), ['prescription_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_medication_refills_expiration'), ['refills_expiration'], unique=False)
        batch_op.create_index(batch_op.f('ix_medication_refills_remaining'), ['refills_remaining'], unique=False)
        batch_op.create_index(batch_op.f('ix_medication_reminder'), ['reminder'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('medication', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_medication_reminder'))
        batch_op.drop_index(batch_op.f('ix_medication_refills_remaining'))
        batch_op.drop_index(batch_op.f('ix_medication_refills_expiration'))
        batch_op.drop_index(batch_op.f('ix_medication_prescription_date'))
        batch_op.drop_index(batch_op.f('ix_medication_length'))
        batch_op.drop_index(batch_op.f('ix_medication_last_filled'))

    op.drop_table('medication')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('pharmacy')
    op.drop_table('doctor')
    # ### end Alembic commands ###
